"use strict";var precacheConfig=[["/jake/index.html","1b60176fa0d305009e988719afaee408"],["/jake/static/css/main.ade14669.css","7bd6dbeeceadf62ab1fc9ac442246980"],["/jake/static/js/main.173a9370.js","b73e0e90cac7b2430016a319cb8f9b70"],["/jake/static/media/0_Big_dream_cover.1c2fb101.jpg","1c2fb101225795cd3f7a8eb550f3f79e"],["/jake/static/media/1_Big_dream.b71141cf.jpg","b71141cf45173792d0a32d85c28d30ec"],["/jake/static/media/2001_aso_1.bfedd6f6.jpg","bfedd6f681aa4bb9ae00622b18d39d3d"],["/jake/static/media/2001_aso_3.73793e28.jpg","73793e28c5a45e19dbb80b8ad9f7cb58"],["/jake/static/media/2001_aso_cover_0.23db0aa0.jpg","23db0aa02b985b8327b3d67f43e478e1"],["/jake/static/media/2_Big_dream.24a5114d.jpg","24a5114d8dafa15e9c49a9f1f5a8cd00"],["/jake/static/media/Glutes_1.cc172ced.jpg","cc172ced07b94011620e8f6f16fae927"],["/jake/static/media/Vampyro_0_TOC.2e10a1d7.jpg","2e10a1d76ec89bd5661d5d4d4be50c7a"],["/jake/static/media/Vampyro_spread_1.caa396de.jpg","caa396dea92a2a27eb571c155bb615da"],["/jake/static/media/Vampyro_spread_2.d047c629.jpg","d047c6295e4ececf3b4b07580a56cd91"],["/jake/static/media/a_sublev_0_T_O_C.8b16f5c9.jpg","8b16f5c9f13d7d49333cad6f86e54946"],["/jake/static/media/a_sublev_1.9b5eb613.jpg","9b5eb6134d5cc69e85060415d5b52740"],["/jake/static/media/a_sublev_2.60d72c0f.jpg","60d72c0fd38607deb15ed57fda578f83"],["/jake/static/media/a_sublev_3.39049284.jpg","39049284cfbbdf393490248a25080d6c"],["/jake/static/media/ej_final_1.7bc07bd2.jpg","7bc07bd24e1654fbc2d5a63b30b56e83"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var r="/jake/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});